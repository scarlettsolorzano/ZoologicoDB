@page "/animales"
@rendermode InteractiveServer
@inject NavigationManager _navigator
@inject IRepositorioAnimales _repositorio
<h3>Animales</h3>
<a class="btn btn-success" href="animales/nueva">Agregar animal</a>
@if (_animales == null)
{
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Cargando...</span>
    </div>
}
else if (_animales.Count == 0)
{
    <h3>No hay animales registradas</h3>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Especie</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var animal in _animales)
            {
                <tr>
                    <td>@animal.Id</td>
                    <td>@animal.Especie</td>
                    <td>@animal.AreaId</td>

                    <td>
                        <button class="btn btn-primary" @onclick="() => Modificar(animal.Id)">Modificar</button>
                        <button class="btn btn-danger" @onclick="() => Eliminar(animal)">Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Animal>? _animales;

    protected override async Task OnInitializedAsync()
    {
        //_personas = await _repositorio.GetAll();
    }

    private async void Eliminar(Animal animal)
    {
        //await _repositorio.Delete(persona.Id);
        _animales!.Remove(animal);
        StateHasChanged();
    }

    private async void Modificar(int id)
    {
        _navigator.NavigateTo($"/animales/editar/{id}");
    }
}

